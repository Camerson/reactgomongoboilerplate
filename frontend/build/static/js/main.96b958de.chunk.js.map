{"version":3,"sources":["config.js","variables/seo.js","store.js","components/nav.js","components/footer.js","layouts/main.js","components/header.js","components/todos.js","pages/home.js","pages/notfound.js","pages/dynamic.js","pages/about.js","pages/contact.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","config","dynamicpagetitle","process","REACT_APP_DYNAMIC_TITLE","apiurl","about","title","initialState","counter","persistConfig","key","storage","persistedReducer","persistReducer","state","action","type","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","Nav","props","to","Footer","Main","Fragment","this","children","React","Component","Header","Helmet","Todos","handleChange","e","newtodo","target","name","value","setState","handleSubmit","preventDefault","axios","post","then","response","todos","data","description","catch","err","console","log","markCompleted","id","todoIndex","findIndex","x","_id","todo","completed","put","alltodos","length","splice","deleteTodo","delete","bind","get","onSubmit","onChange","required","map","el","index","onClick","Home","addOne","increasecount","removeOne","decreasecount","count","style","display","alignItems","alignContent","connect","dispatch","NotFound","Dynamic","match","params","slug","About","Contact","togglePassword","showpassword","newcontact","handleCheckChange","updateSubmitted","submitted","newsletter","setTimeout","password","checked","Routes","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","Store","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.96b958de.chunk.js","sourcesContent":["module.exports = {\n    config: {\n        dynamicpagetitle: process.env.REACT_APP_DYNAMIC_TITLE ? process.env.REACT_APP_DYNAMIC_TITLE : \"\",\n        apiurl: process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL : \"\",\n    }\n}\n","module.exports = {\n    about: {\n        title: 'About'\n    }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nconst initialState = {\n    counter: 0\n}\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INCREASE_COUNT':\n            return {\n                ...state,\n                counter: state.counter + 1\n            }\n        case 'DECREASE_COUNT':\n            return {\n                ...state,\n                counter: state.counter - 1\n            }\n        default:\n            return state\n    }\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n\n\nexport default () => {\n    let store = createStore(persistedReducer, composeWithDevTools(applyMiddleware()))\n    let persistor = persistStore(store)\n    return { store, persistor }\n}\n\n// const store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware()))\n// export default store;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Nav = props => (\n    <nav>\n        <Link to={'/'}>Home</Link>\n        <Link to={'/about'}>About</Link>\n        <Link to={'/contact'}>Contact</Link>\n        <Link to={'/dynamic/123'}>Dynamic with Slug 123</Link>\n        <Link to={'/jsdlkfjsdlkf'}>404 Error Page</Link>\n    </nav>\n)\n\nexport default Nav;\n","import React from 'react';\n\nconst Footer = props => (\n    <footer>\n\n    </footer>\n)\n\nexport default Footer;\n","import React from 'react'\nimport Nav from \"../components/nav\";\nimport Footer from \"../components/footer\";\n\nclass Main extends React.Component {\n    render(){\n        return (\n            <React.Fragment>\n                <Nav />\n                {this.props.children}\n                <Footer />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Main;\n","import React from 'react';\nimport {Helmet} from 'react-helmet'\n\nconst Header = props => (\n    <Helmet>\n        <title>{props.title ? props.title : 'No Page Title!'}</title>\n    </Helmet>\n)\n\nexport default Header;\n","import React from 'react';\nimport axios from 'axios'\nimport {config} from '../config'\n\nexport default class Todos extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            todos: [],\n            newtodo: {\n                title: '',\n                description: ''\n            }\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.markCompleted = this.markCompleted.bind(this);\n        this.deleteTodo = this.deleteTodo.bind(this);\n    }\n\n    handleChange = e => {\n        let newtodo = this.state.newtodo;\n        let name = e.target.name;\n        newtodo[name] = e.target.value;\n        this.setState({newtodo})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        axios.post(`${config.apiurl}`, this.state.newtodo)\n            .then(response => {\n                this.setState({\n                    todos: [...this.state.todos, response.data],\n                    newtodo: {\n                        title: '',\n                        description: ''\n                    }\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    markCompleted = (e, id) => {\n        let todoIndex = this.state.todos.findIndex(x => x._id == id)\n        let todo = this.state.todos[todoIndex]\n        todo.completed = true\n        axios.put(`${config.apiurl}/${id}`, todo)\n            .then(response => {\n                let alltodos = this.state.todos\n                let todos = alltodos.length === 1 ? [] : alltodos.splice(todoIndex, 1)\n                this.setState({todos})\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    deleteTodo = (e, id) => {\n        let todoIndex = this.state.todos.findIndex(x => x._id == id)\n        axios.delete(`${config.apiurl}/${id}`)\n            .then(response => {\n                let alltodos = this.state.todos\n                let todos = alltodos.length === 1 ? [] : alltodos.splice(todoIndex, 1)\n                this.setState({todos})\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    componentDidMount(){\n        axios.get(config.apiurl)\n            .then(response => {\n                this.setState({todos: response.data})\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render(){\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>Title</label>\n                        <input\n                            type={'text'}\n                            name={'title'}\n                            value={this.state.newtodo.title}\n                            onChange={this.handleChange}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label>Description</label>\n                        <textarea\n                            name={'description'}\n                            value={this.state.newtodo.description}\n                            onChange={this.handleChange}\n                            required\n                        />\n                    </div>\n                    <button type={'submit'}>Add Todo</button>\n                </form>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Title</th>\n                            <th>Description</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.todos && this.state.todos.map((el, index) =>\n                        <tr key={el._id}>\n                            <td>{index + 1}</td>\n                            <td>{el.title}</td>\n                            <td>{el.description}</td>\n                            <td>\n                                <button\n                                    type={'button'}\n                                    onClick={(e) => this.markCompleted(e, el._id)}\n                                >\n                                    Mark Completed\n                                </button>\n                                <button\n                                    type={'button'}\n                                    onClick={(e) => this.deleteTodo(e, el._id)}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport Main from '../layouts/main'\nimport Header from \"../components/header\";\nimport Todos from \"../components/todos\";\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            title: ''\n        }\n    }\n\n    addOne = () => {\n        this.props.increasecount()\n        // const increaseCount = this.props.increasecount()\n        // const increaseCountState = this.setState({count: this.state.count + 1})\n        // Promise.all([increaseCount, increaseCountState])\n        //     .then(values => {\n        //         return values\n        //     })\n        //     .catch(err => {\n        //         console.log(err)\n        //     })\n    }\n\n    removeOne = () => {\n        this.props.decreasecount()\n        // const decreaseCount = this.props.decreasecount()\n        // const decreaseCountState = this.setState({count: this.state.count - 1})\n        // Promise.all([decreaseCount, decreaseCountState])\n        //     .then(values => {\n        //         console.log(values)\n        //     })\n        //     .catch(err => {\n        //         console.log(err)\n        //     })\n    }\n\n    componentDidMount(){\n        this.setState({title: 'Home', count: this.props.count})\n    }\n    render(){\n        return (\n            <Main>\n                <Header\n                    title={this.state.title}\n                />\n                <h1>{this.state.title}</h1>\n                <p>An example of head elements coming from state.</p>\n\n                <div style={{display: 'flex', alignItems: 'center', alignContent: 'center'}}>\n                    <button onClick={this.removeOne}>Decrease</button>\n                    <p>{this.props.counter}</p>\n                    <button onClick={this.addOne}>Increase</button>\n                </div>\n\n                <Todos />\n            </Main>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        counter: state.counter\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        increasecount: () => dispatch({\n            type: 'INCREASE_COUNT'\n        }),\n        decreasecount: () => dispatch({\n            type: 'DECREASE_COUNT'\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react'\nimport Main from '../layouts/main'\n\nclass NotFound extends React.Component {\n    render(){\n        return (\n            <Main>\n                <h1>Not Found</h1>\n            </Main>\n        )\n    }\n}\n\nexport default NotFound;\n","import React from 'react'\nimport Main from '../layouts/main'\nimport Header from \"../components/header\";\nimport {config} from \"../config\";\n\nclass Dynamic extends React.Component {\n    render(){\n        return (\n            <Main>\n                <Header\n                    title={config.dynamicpagetitle}\n                />\n                <h1>Dynamic Page - {this.props.match.params.slug}</h1>\n                <p>Page Title From Environment Variable</p>\n            </Main>\n        )\n    }\n}\n\nexport default Dynamic;\n","import React from 'react'\nimport Main from '../layouts/main'\nimport Header from \"../components/header\";\nimport {about} from '../variables/seo'\n\nclass About extends React.Component {\n    render(){\n        return (\n            <Main>\n                <Header\n                    title={about.title}\n                />\n                <h1>{about.title}</h1>\n                <p>An example of head elements coming from variable files.</p>\n            </Main>\n        )\n    }\n}\n\nexport default About;\n","import React from 'react';\nimport Main from \"../layouts/main\";\nimport Header from \"../components/header\";\n\nclass Contact extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            newcontact: {\n                name: '',\n                password: '',\n                newsletter: true\n            },\n            submitted: false,\n            showpassword: false\n        }\n        this.togglePassword = this.togglePassword.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCheckChange = this.handleCheckChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    togglePassword = () => this.setState({showpassword: !this.state.showpassword})\n\n    handleChange = e => {\n        let newcontact = this.state.newcontact\n        let name = e.target.name;\n        newcontact[name] = e.target.value;\n        this.setState({newcontact})\n    }\n\n    handleCheckChange = e => {\n        let newcontact = this.state.newcontact\n        let name = e.target.name;\n        newcontact[name] = !newcontact[name];\n        this.setState({newcontact})\n    }\n\n    updateSubmitted = () => {\n        this.setState({submitted: false})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state.newcontact)\n        this.setState({\n            newcontact: {\n                name: '',\n                newsletter: true\n            },\n            submitted: true\n        }, () => {\n            setTimeout(this.updateSubmitted, 3000)\n        })\n    }\n    render(){\n        return (\n            <Main>\n                <Header\n                    title={\"Contact Us\"}\n                />\n                {this.state.submitted ? <p>Submitted Form</p> : ''}\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>Name</label>\n                        <input\n                            type={'text'}\n                            name={'name'}\n                            value={this.state.newcontact.name}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <div>\n                        <label>\n                            <input\n                                type={'checkbox'}\n                                name={'newsletter'}\n                                checked={this.state.newcontact.newsletter}\n                                onChange={this.handleCheckChange}\n                            />\n                            Newsletter\n                        </label>\n                    </div>\n                    <div>\n                        <label>Password</label>\n                        <input\n                            type={this.state.showpassword ? 'text' : 'password'}\n                            name={'password'}\n                            value={this.state.newcontact.password}\n                            onChange={this.handleChange}\n                        />\n                        <button\n                            type={'button'}\n                            onClick={this.togglePassword}\n                        >\n                            {this.state.showpassword ? 'Hide' : 'Show'} Password\n                        </button>\n                    </div>\n                    <button type={'submit'}>Submit Form</button>\n                </form>\n            </Main>\n        )\n    }\n}\n\nexport default Contact;\n","import React from 'react'\nimport { Route, Switch } from \"react-router\";\n\nimport Home from './pages/home'\nimport NotFound from \"./pages/notfound\";\nimport Dynamic from \"./pages/dynamic\";\nimport About from \"./pages/about\";\nimport Contact from \"./pages/contact\";\n\nclass Routes extends React.Component {\n    render(){\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact\" component={Contact} />\n                <Route path=\"/dynamic/:slug\" component={Dynamic} />\n                <Route component={NotFound} />\n            </Switch>\n        )\n    }\n}\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {Provider} from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport Store from './store'\nimport ReactDOM from 'react-dom';\nimport './styles.css'\nimport {\n    BrowserRouter as Router\n} from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={Store().store}>\n          <PersistGate loading={null} persistor={Store().persistor}>\n              <Router>\n                  <Routes />\n              </Router>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}